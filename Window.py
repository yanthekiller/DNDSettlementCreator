# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Window.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox, QSlider
from PyQt5.QtGui import *
from PyQt5.QtCore import *
from SettlementConfiguratorModule import *
from NameGenerator import *

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1004, 585)
        MainWindow.setWindowOpacity(1.0)
        MainWindow.setWindowIcon(QIcon('icon.ico'))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setObjectName("groupBox")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.GeneratedList = QtWidgets.QListWidget(self.groupBox)
        self.GeneratedList.setObjectName("GeneratedList")
        self.gridLayout_2.addWidget(self.GeneratedList, 0, 0, 1, 1)
        self.horizontalLayout_2.addWidget(self.groupBox)
        self.horizontalLayout_3.addLayout(self.horizontalLayout_2)
        self.groupBox_3 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_3.setTitle("")
        self.groupBox_3.setObjectName("groupBox_3")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.groupBox_3)
        self.verticalLayout.setObjectName("verticalLayout")
        self.groupBox_4 = QtWidgets.QGroupBox(self.groupBox_3)
        self.groupBox_4.setObjectName("groupBox_4")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.groupBox_4)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label = QtWidgets.QLabel(self.groupBox_4)
        self.label.setObjectName("label")
        self.verticalLayout_2.addWidget(self.label)
        self.GenAmountInfo = QtWidgets.QLabel(self.groupBox_4)
        self.GenAmountInfo.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.GenAmountInfo.setObjectName("GenAmountInfo")
        self.verticalLayout_2.addWidget(self.GenAmountInfo)
        self.AmountToGenerate = QtWidgets.QSlider(self.groupBox_4)
        self.AmountToGenerate.setMinimum(10)
        self.AmountToGenerate.setMaximum(100)
        self.AmountToGenerate.setSingleStep(10)
        self.AmountToGenerate.setSliderPosition(10)
        self.AmountToGenerate.setOrientation(QtCore.Qt.Horizontal)
        self.AmountToGenerate.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.AmountToGenerate.setObjectName("AmountToGenerate")
        self.verticalLayout_2.addWidget(self.AmountToGenerate)
        self.verticalLayout.addWidget(self.groupBox_4)
        self.ChosenList = QtWidgets.QListWidget(self.groupBox_3)
        self.ChosenList.setObjectName("ChosenList")
        self.verticalLayout.addWidget(self.ChosenList)
        self.GenerateNames = QtWidgets.QPushButton(self.groupBox_3)
        self.GenerateNames.setObjectName("GenerateNames")
        self.verticalLayout.addWidget(self.GenerateNames)
        self.horizontalLayout_3.addWidget(self.groupBox_3)
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setObjectName("groupBox_2")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.groupBox_2)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.FileNames = QtWidgets.QListWidget(self.groupBox_2)
        self.FileNames.setObjectName("FileNames")
        self.gridLayout_3.addWidget(self.FileNames, 0, 0, 1, 1)
        self.horizontalLayout_3.addWidget(self.groupBox_2)
        self.verticalLayout_4.addLayout(self.horizontalLayout_3)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.FinalGeneration = QtWidgets.QPushButton(self.centralwidget)
        self.FinalGeneration.setObjectName("FinalGeneration")
        self.gridLayout.addWidget(self.FinalGeneration, 2, 1, 1, 1)
        self.DoGenerateWithNew = QtWidgets.QCheckBox(self.centralwidget)
        self.DoGenerateWithNew.setObjectName("DoGenerateWithNew")
        self.gridLayout.addWidget(self.DoGenerateWithNew, 0, 1, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem, 0, 0, 1, 1)
        self.DoGenerateOnlyNew = QtWidgets.QCheckBox(self.centralwidget)
        self.DoGenerateOnlyNew.setObjectName("DoGenerateOnlyNew")
        self.gridLayout.addWidget(self.DoGenerateOnlyNew, 1, 1, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem1, 1, 2, 1, 1)
        self.verticalLayout_4.addLayout(self.gridLayout)
        self.verticalLayout_5.addLayout(self.verticalLayout_4)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.setfilenames()

        self.GenerateNames.clicked.connect(lambda:self.sureBeforeOverrite(self.generateNames))
        self.FinalGeneration.clicked.connect(lambda:self.sureBeforeOverrite(proceedConfiguration))
        self.GeneratedList.clicked.connect(self.chooseNames)
        self.ChosenList.clicked.connect(self.removeNames)
        self.AmountToGenerate.valueChanged.connect(self.sliderMove)
        self.DoGenerateWithNew.stateChanged.connect(self.withGenChanged)
        self.DoGenerateOnlyNew.stateChanged.connect(self.onlyGenChanged)

    def withGenChanged(self):
        if self.DoGenerateWithNew.isChecked()==False:
            self.DoGenerateOnlyNew.setChecked(False)
        pass

    def onlyGenChanged(self):
        if self.DoGenerateOnlyNew.isChecked():
            self.DoGenerateWithNew.setChecked(True)
        pass

    def setfilenames(self):
        text=[]
        for i in open('settlements.txt'):
            text.append(i)
        self.FileNames.addItems(text)

    def sliderMove(self,slider):
        self.GenAmountInfo.setText(str(self.AmountToGenerate.value()))
        pass

    def generateNames(self):
        self.generateCycles=self.AmountToGenerate.value()
        generator=NameGenerate()
        self.GeneratedList.addItems(generator.generate(self.generateCycles))

    def chooseNames(self, qModelIndex):
        self.ChosenList.addItem(self.GeneratedList.takeItem(self.GeneratedList.row(self.GeneratedList.currentItem())))
        pass

    def removeNames(self, qModelIndex):
        self.GeneratedList.addItem(self.ChosenList.takeItem(self.ChosenList.row(self.ChosenList.currentItem())))
        pass

    def sureBeforeOverrite(self,execu):
        reply = QMessageBox.question(self.centralwidget, 'Message',
            "Вы уверены?", QMessageBox.Yes |
            QMessageBox.No, QMessageBox.No)
        if reply==QMessageBox.Yes: 
            filenames=[]
            genNames=[]
            final=[]
            for i in range(self.FileNames.count()):
                filenames.append(self.FileNames.item(i).text())
            for i in range(self.ChosenList.count()):
                genNames.append(self.ChosenList.item(i).text())
            if self.DoGenerateWithNew.isChecked() and self.DoGenerateOnlyNew.isChecked():
                final=genNames
            elif self.DoGenerateWithNew.isChecked() and self.DoGenerateOnlyNew.isChecked()==False:
                final=filenames+genNames
            elif self.DoGenerateWithNew.isChecked()==False and self.DoGenerateOnlyNew.isChecked()==False:
                final=filenames
            if execu==proceedConfiguration:
                execu(final)
            else:
                execu()
    def generateName():

        pass



    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Settlement Creator"))
        self.groupBox.setTitle(_translate("MainWindow", "Сгенерированные слова"))
        self.groupBox_4.setTitle(_translate("MainWindow", "Настройки генерации"))
        self.label.setText(_translate("MainWindow", "Количество генерируемых названий:"))
        self.GenAmountInfo.setText(_translate("MainWindow", "10"))
        self.GenerateNames.setText(_translate("MainWindow", "Генерировать"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Названия городов из settlements.txt"))
        self.FinalGeneration.setText(_translate("MainWindow", "Сгенерировать"))
        self.DoGenerateWithNew.setText(_translate("MainWindow", "Учитывать выбранные названия из генератора"))
        self.DoGenerateOnlyNew.setText(_translate("MainWindow", "Генерировать только по выбранным сгенерированным словам"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
